// <auto-generated />
using System;
using GA.UniCard.Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GA.UniCard.Domain.Migrations
{
    [DbContext(typeof(UniCardDbContext))]
    partial class UniCardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GA.UniCard.Domain.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Ordering_Date");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Total_Amount");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsDescending();

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            OrderDate = new DateTime(2024, 4, 27, 1, 21, 0, 413, DateTimeKind.Local).AddTicks(981),
                            TotalAmount = 224m,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            OrderDate = new DateTime(2024, 5, 8, 1, 21, 0, 413, DateTimeKind.Local).AddTicks(1007),
                            TotalAmount = 969m,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            OrderDate = new DateTime(2024, 5, 20, 1, 21, 0, 413, DateTimeKind.Local).AddTicks(1009),
                            TotalAmount = 905m,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            OrderDate = new DateTime(2024, 4, 5, 1, 21, 0, 413, DateTimeKind.Local).AddTicks(1011),
                            TotalAmount = 605m,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            OrderDate = new DateTime(2024, 5, 20, 1, 21, 0, 413, DateTimeKind.Local).AddTicks(1013),
                            TotalAmount = 961m,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            OrderDate = new DateTime(2024, 5, 2, 1, 21, 0, 413, DateTimeKind.Local).AddTicks(1014),
                            TotalAmount = 986m,
                            UserId = 6L
                        });
                });

            modelBuilder.Entity("GA.UniCard.Domain.Entities.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Item_Price");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Item_Quantity");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsDescending();

                    b.HasIndex("ProductId")
                        .IsDescending();

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            OrderId = 1L,
                            Price = 46m,
                            ProductId = 1L,
                            Quantity = 7
                        },
                        new
                        {
                            Id = 2L,
                            OrderId = 2L,
                            Price = 37m,
                            ProductId = 2L,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 3L,
                            OrderId = 3L,
                            Price = 43m,
                            ProductId = 3L,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4L,
                            OrderId = 4L,
                            Price = 18m,
                            ProductId = 4L,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 5L,
                            OrderId = 5L,
                            Price = 80m,
                            ProductId = 5L,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6L,
                            OrderId = 3L,
                            Price = 90m,
                            ProductId = 2L,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 7L,
                            OrderId = 6L,
                            Price = 63m,
                            ProductId = 4L,
                            Quantity = 9
                        });
                });

            modelBuilder.Entity("GA.UniCard.Domain.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Product_Description");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Product_Price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Product_Name");

                    b.HasKey("Id");

                    b.HasIndex("ProductName")
                        .IsDescending();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "The milk is good produce in mountains",
                            Price = 59m,
                            ProductName = "Milk"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "The Apple is good produce in mountains",
                            Price = 77m,
                            ProductName = "Apple"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "The Banana is good produce in mountains",
                            Price = 71m,
                            ProductName = "Banana"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "The Bread is good produce in mountains",
                            Price = 93m,
                            ProductName = "Bread"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "The Gold is good produce in mountains",
                            Price = 71m,
                            ProductName = "Gold"
                        },
                        new
                        {
                            Id = 6L,
                            Description = "The Fish is good produce in mountains",
                            Price = 71m,
                            ProductName = "Fish"
                        },
                        new
                        {
                            Id = 7L,
                            Description = "The Beans is good produce in mountains",
                            Price = 28m,
                            ProductName = "Beans"
                        },
                        new
                        {
                            Id = 8L,
                            Description = "The Sugar is good produce in mountains",
                            Price = 34m,
                            ProductName = "Sugar"
                        });
                });

            modelBuilder.Entity("GA.UniCard.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User_Name");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "Aapkhazava22@gmail.com",
                            Password = "Guga123",
                            UserName = "Guga123#"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "Guga342@gmail.com",
                            Password = "Gaga1234",
                            UserName = "Guga13guga##"
                        },
                        new
                        {
                            Id = 3L,
                            Email = "Aapkhazava22@gmail.com",
                            Password = "Giga12346$",
                            UserName = "Guga123#"
                        },
                        new
                        {
                            Id = 4L,
                            Email = "NikaArtmeladze@gmail.com",
                            Password = "Guga%34",
                            UserName = "Guga123#"
                        },
                        new
                        {
                            Id = 5L,
                            Email = "Giorgi123@gmail.com",
                            Password = "Giorgi324",
                            UserName = "Guga123#"
                        },
                        new
                        {
                            Id = 6L,
                            Email = "UniPayAdmin@gmail.com",
                            Password = "Admin",
                            UserName = "Admin#"
                        },
                        new
                        {
                            Id = 7L,
                            Email = "Aapkhazava2200@gmail.com",
                            Password = "User4562",
                            UserName = "User#"
                        });
                });

            modelBuilder.Entity("GA.UniCard.Domain.Entities.Order", b =>
                {
                    b.HasOne("GA.UniCard.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GA.UniCard.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("GA.UniCard.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GA.UniCard.Domain.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GA.UniCard.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("GA.UniCard.Domain.Entities.Product", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("GA.UniCard.Domain.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
